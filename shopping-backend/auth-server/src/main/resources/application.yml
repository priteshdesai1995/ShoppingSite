spring:
  application:
    name: "AuthServer"
    
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ecommerce_user
    username: root
    password: brainroot
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
    hibernate:
      ddl-auto: update
  mvc:
    dispatch-options-request: true
server:
  port: 8087
  
  
# custom configurations for the JWT token security related
app:
  jwt:
    # Signing key for HS512 algorithm
    # In http://www.allkeysgenerator.com/ you can generate all kinds of keys
    secret: v9y$B&E)H@MbQeThWmZq4t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G+KbPeShVkYp
    expiration:
      minutes: 10
  cors:
    allowed-origins: http://localhost:5173
#security.jwt.token.secret-key: my-secret-key

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: "http://localhost:8070/eureka/"

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s

  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
      
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000
      
      
info:
  app:
    name: "AuthServer"
    description: "AuthServer Application"
    version: "1.0.0"


  